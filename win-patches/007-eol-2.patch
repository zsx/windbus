Index: dbus/dbus-string.c
===================================================================
--- dbus/dbus-string.c	(revision 510)
+++ dbus/dbus-string.c	(working copy)
@@ -2021,52 +2087,22 @@
 _dbus_string_pop_line (DBusString *source,
                        DBusString *dest)
 {
-  int eol;
-  dbus_bool_t have_newline;
+  int eol, eol_len;
   
   _dbus_string_set_length (dest, 0);
   
   eol = 0;
-  if (_dbus_string_find (source, 0, "\n", &eol))
-    {
-      have_newline = TRUE;
-      eol += 1; /* include newline */
-    }
-  else
-    {
+  if (!_dbus_string_find_eol (source, 0, &eol, &eol_len))
       eol = _dbus_string_get_length (source);
-      have_newline = FALSE;
-    }
 
   if (eol == 0)
     return FALSE; /* eof */
   
-  if (!_dbus_string_move_len (source, 0, eol,
-                              dest, 0))
-    {
-      return FALSE;
-    }
+  if (!_dbus_string_move_len (source, 0, eol + eol_len, dest, 0))
+	  return FALSE;
 
-  /* dump the newline and the \r if we have one */
-  if (have_newline)
-    {
-      dbus_bool_t have_cr;
-      
-      _dbus_assert (_dbus_string_get_length (dest) > 0);
-
-      if (_dbus_string_get_length (dest) > 1 &&
-          _dbus_string_get_byte (dest,
-                                 _dbus_string_get_length (dest) - 2) == '\r')
-        have_cr = TRUE;
-      else
-        have_cr = FALSE;
-        
-      _dbus_string_set_length (dest,
-                               _dbus_string_get_length (dest) -
-                               (have_cr ? 2 : 1));
-    }
-  
-  return TRUE;
+  /* remove line ending */
+  return _dbus_string_set_length(dest, eol);
 }
 
 #ifdef DBUS_BUILD_TESTS
Index: dbus/dbus-string-util.c
===================================================================
--- dbus/dbus-string-util.c     (revision 518)
+++ dbus/dbus-string-util.c     (working copy)
@@ -702,7 +702,29 @@
   test_roundtrips (test_hex_roundtrip);

   _dbus_string_free (&str);
-
+
+  {
+  int found,found_len;
+  _dbus_string_init_const (&str, "012\r\n567\n90");
+
+  if (!_dbus_string_find_eol(&str, 0, &found, &found_len) || found != 3 || found_len != 2)
+    _dbus_assert_not_reached ("Did not find '\\r\\n'");
+  if (found != 3 || found_len != 2)
+    _dbus_assert_not_reached ("invalid return values");
+
+  if (!_dbus_string_find_eol(&str, 5, &found, &found_len))
+    _dbus_assert_not_reached ("Did not find '\\n'");
+  if (found != 8 || found_len != 1)
+    _dbus_assert_not_reached ("invalid return values");
+
+  if (_dbus_string_find_eol(&str, 9, &found, &found_len))
+    _dbus_assert_not_reached ("Found not expected '\\n'");
+  else if (found != 11 || found_len != 0)
+    _dbus_assert_not_reached ("invalid return values '\\n'");
+
+  _dbus_string_free (&str);
+  }
+
   return TRUE;
 }

Index: bus/desktop-file.c
===================================================================
--- bus/desktop-file.c	(Revision 504)
+++ bus/desktop-file.c	(Arbeitskopie)
@@ -360,15 +360,15 @@
 static void
 parse_comment_or_blank (BusDesktopFileParser *parser)
 {
-  int line_end;
+  int line_end, eol_len;
   
-  if (!_dbus_string_find (&parser->data, parser->pos, "\n", &line_end))
+  if (!_dbus_string_find_eol (&parser->data, parser->pos, &line_end, &eol_len))
     line_end = parser->len;
 
   if (line_end == parser->len)
     parser->pos = parser->len;
   else
-    parser->pos = line_end + 1;
+    parser->pos = line_end + eol_len;
   
   parser->line_num += 1;
 }
@@ -393,12 +393,12 @@
 static dbus_bool_t
 parse_section_start (BusDesktopFileParser *parser, DBusError *error)
 {
-  int line_end;
+  int line_end, eol_len;
   char *section_name;
 
   _DBUS_ASSERT_ERROR_IS_CLEAR (error);
-  
-  if (!_dbus_string_find (&parser->data, parser->pos, "\n", &line_end))
+    
+  if (!_dbus_string_find_eol (&parser->data, parser->pos, &line_end, &eol_len))
     line_end = parser->len;
   
   if (line_end - parser->pos <= 2 ||
@@ -438,7 +438,7 @@
   if (line_end == parser->len)
     parser->pos = parser->len;
   else
-    parser->pos = line_end + 1;
+    parser->pos = line_end + eol_len;
   
   parser->line_num += 1;
 
@@ -450,7 +450,7 @@
 static dbus_bool_t
 parse_key_value (BusDesktopFileParser *parser, DBusError *error)
 {
-  int line_end;
+  int line_end, eol_len;
   int key_start, key_end;
   int value_start;
   int p;
@@ -460,7 +460,7 @@
 
   _DBUS_ASSERT_ERROR_IS_CLEAR (error);
   
-  if (!_dbus_string_find (&parser->data, parser->pos, "\n", &line_end))
+  if (!_dbus_string_find_eol (&parser->data, parser->pos, &line_end, &eol_len))
     line_end = parser->len;
   
   p = parser->pos;
@@ -483,7 +483,7 @@
       if (line_end == parser->len)
 	parser->pos = parser->len;
       else
-	parser->pos = line_end + 1;
+	parser->pos = line_end + eol_len;
 	  
       parser->line_num += 1;
 
@@ -568,7 +568,7 @@
   if (line_end == parser->len)
     parser->pos = parser->len;
   else
-    parser->pos = line_end + 1;
+    parser->pos = line_end + eol_len;
   
   parser->line_num += 1;
 
